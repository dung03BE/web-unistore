import React, { useState } from 'react';
import { Carousel, Typography, Card, Steps, Button, Collapse, Divider, List, Form, Input, message, Select, Modal, Space } from 'antd';
import "../GreenPhone/GreenPhone.scss";
import thugom from '../../images/thugom.png';
import vntaiche from '../../images/vntaiche.jpg';
import { CheckCircleOutlined, DatabaseTwoTone, HomeTwoTone, MobileOutlined, ShopTwoTone } from '@ant-design/icons';
import banner1 from '../../images/banner1.jpg';
import banner2 from '../../images/banner2.jpg';
import banner3 from '../../images/banner3.jpg';
import vnTC from '../../images/vnTC.png';
import { Outlet, useNavigate, useLocation } from 'react-router-dom';
import { createRecycleRequest } from '../../services/recycleService';
import { Upload } from 'antd'; // Th√™m import n√†y
import { LoadingOutlined, PlusOutlined } from '@ant-design/icons';
import { getToken } from '../../services/localStorageService';
const { Title, Paragraph, Text } = Typography;
const { Step } = Steps;
const { Panel } = Collapse;

function GreenPhone() {
    const [isModalVisible, setIsModalVisible] = React.useState(false);
    const [deviceType, setDeviceType] = React.useState('');
    const [deviceCondition, setDeviceCondition] = React.useState('');
    const [pickupMethod, setPickupMethod] = React.useState('');
    const [currentStep, setCurrentStep] = React.useState(0);
    const [form] = Form.useForm();
    const [requestId, setRequestId] = React.useState(null); // Th√™m state ƒë·ªÉ l∆∞u tr·ªØ ID request
    const navigate = useNavigate(); // Kh·ªüi t·∫°o useNavigate
    //upload image 
    const [imageUrl, setImageUrl] = useState(null); // Th√™m state n√†y
    const [loadingUpload, setLoadingUpload] = useState(false); // Th√™m state n√†y
    const sliderImages = [
        banner1,
        banner2,
        banner3,
        // Th√™m c√°c URL ·∫£nh kh√°c v√†o ƒë√¢y
    ];
    const steps = [
        {
            title: 'Ki·ªÉm tra & Ph√¢n lo·∫°i',
            content: 'ƒê√°nh gi√° t√¨nh tr·∫°ng ƒëi·ªán tho·∫°i: c√≤n ho·∫°t ƒë·ªông, c·∫ßn s·ª≠a ch·ªØa hay h·ªèng ho√†n to√†n.',
        },
        {
            title: 'X·ª≠ l√Ω theo t·ª´ng lo·∫°i',
            content: (
                <>
                    <Paragraph style={{ fontSize: '18px', textAlign: 'justify' }}>ƒêi·ªán tho·∫°i c√≤n d√πng t·ªët ‚Üí T√¢n trang v√† b√°n l·∫°i.</Paragraph>
                    <Paragraph style={{ fontSize: '18px', textAlign: 'justify' }} >ƒêi·ªán tho·∫°i h·ªèng nh∆∞ng s·ª≠a ƒë∆∞·ª£c ‚Üí S·ª≠a ch·ªØa, thay linh ki·ªán.</Paragraph>
                    <Paragraph style={{ fontSize: '18px', textAlign: 'justify' }} >ƒêi·ªán tho·∫°i h·ªèng ho√†n to√†n ‚Üí Th√°o linh ki·ªán h·ªØu √≠ch, ph·∫ßn c√≤n l·∫°i g·ª≠i ƒëi t√°i ch·∫ø.</Paragraph>
                </>
            ),
        },
        {
            title: 'B√°n l·∫°i & T√°i ch·∫ø',
            content: (
                <>
                    <Paragraph style={{ fontSize: '18px', textAlign: 'justify' }}>C√°c thi·∫øt b·ªã s·ª≠a xong s·∫Ω ƒë∆∞·ª£c b·∫£o h√†nh v√† b√°n l·∫°i.</Paragraph>
                    <Paragraph style={{ fontSize: '18px', textAlign: 'justify' }}>Linh ki·ªán h·ªèng s·∫Ω ƒë∆∞·ª£c chuy·ªÉn ƒë·∫øn ƒë∆°n v·ªã t√°i ch·∫ø chuy√™n nghi·ªáp.</Paragraph>
                </>
            ),
        },
    ];

    const nextStep = () => {
        setCurrentStep(currentStep + 1);
    };

    const prevStep = () => {
        setCurrentStep(currentStep - 1);
    };
    const isLoggedIn = () => {
        const token = getToken();
        if (token) {
            return true;
        }
        return false;
    };
    const showModal = () => {
        if (isLoggedIn()) {
            setIsModalVisible(true);
        } else {
            message.warning('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒëƒÉng k√Ω thu gom ho·∫∑c ƒëi·ªÅn t·ª´ Google Form!');

        }
    };
    const openGoogleForm = () => {
        window.open('https://www.facebook.com/hoahocthatdongian/posts/1066908996757911/', '_blank'); // Thay th·∫ø YOUR_GOOGLE_FORM_URL b·∫±ng URL form Google c·ªßa b·∫°n
    };
    const handleCancel = () => {
        setIsModalVisible(false);
    };
    const handleModalSubmit = async () => {
        console.log('Modal values:', { deviceType, deviceCondition, pickupMethod });
        const requestData = {
            deviceType: deviceType,
            deviceCondition: deviceCondition,
            pickupMethod: pickupMethod,
            imageUrl: imageUrl,
        };
        console.log("Request data:", requestData);
        try {
            const result = await createRecycleRequest(requestData);
            if (result) {
                message.success('Y√™u c·∫ßu thu gom ƒë√£ ƒë∆∞·ª£c g·ª≠i! H√£y theo d√µi ti·∫øn tr√¨nh ƒë·ªÉ nh·∫≠n bi·∫øt k·∫øt qu·∫£');
                setIsModalVisible(false);
                setRequestId(result.result.id); // L∆∞u ID request ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng
            }
        }
        catch (error) {
            message.error('C√≥ l·ªói x·∫£y ra khi g·ª≠i y√™u c·∫ßu!');
        }
        form.resetFields();
    };
    const uploadButton = (
        <div>
            {loadingUpload ? <LoadingOutlined /> : <PlusOutlined />}
            <div style={{ marginTop: 8 }}>Upload</div>
        </div>
    );
    const handleViewProgress = () => {
        console.log('View progress:', requestId);
        navigate(`/progress/${requestId}`); // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang ti·∫øn tr√¨nh
    };
    // H√†m x·ª≠ l√Ω upload ·∫£nh
    const handleUploadChange = (info) => {
        console.log('Upload response:', info.file.response);

        if (info.file.status === 'uploading') {
            setLoadingUpload(true);
            return;
        }
        if (info.file.status === 'done') {

            // L·∫•y URL ·∫£nh t·ª´ response
            setImageUrl(info.file.response.url);
            setLoadingUpload(false);
        }
    };
    // H√†m custom request ƒë·ªÉ upload ·∫£nh
    const customUploadRequest = async ({ file, onSuccess, onError }) => {
        const formData = new FormData();
        formData.append('file', file);

        try {
            const response = await fetch('http://localhost:8081/api/upload', { // Thay ƒë·ªïi URL upload n·∫øu c·∫ßn
                method: 'POST',
                body: formData,
            });

            if (response.ok) {
                const data = await response.json();
                onSuccess(data);
            } else {
                onError();
            }
        } catch (error) {
            onError();
        }
    };
    const imageUrls = `http://localhost:8081/uploads/${imageUrl}`;
    return (
        <div style={{ padding: '20px' }}>
            <div className='slider'>
                <Carousel autoplay>
                    {sliderImages.map((img, index) => (
                        <div key={index}>
                            <img src={img} alt={`Slider ${index + 1}`} style={{ width: '100%' }} />
                        </div>
                    ))}
                </Carousel>
            </div>
            <Title level={1} style={{ textAlign: 'center' }}> üåø Ch∆∞∆°ng Tr√¨nh "ƒêi·ªán Tho·∫°i Xanh"</Title>

            <div className="recycle-image2">
                <div className='recycle-image2_1'  >
                    <Paragraph style={{ fontSize: '18px', textAlign: 'justify' }}>
                        Trong th·ªùi ƒë·∫°i c√¥ng ngh·ªá ph√°t tri·ªÉn nhanh ch√≥ng, r√°c th·∫£i ƒëi·ªán t·ª≠ ƒëang tr·ªü th√†nh m·ªôt v·∫•n ƒë·ªÅ l·ªõn ƒë·ªëi v·ªõi m√¥i tr∆∞·ªùng.
                        M·ªói nƒÉm, h√†ng tri·ªáu chi·∫øc ƒëi·ªán tho·∫°i c≈© b·ªã v·ª©t b·ªè, t·∫°o ra l∆∞·ª£ng r√°c th·∫£i ƒë·ªôc h·∫°i kh·ªïng l·ªì.

                        V·∫≠y gi·∫£i ph√°p l√† g√¨?
                    </Paragraph>
                    <Paragraph style={{ fontSize: '18px', textAlign: 'justify' }}>
                        Ch∆∞∆°ng tr√¨nh <b style={{ color: 'Green' }}>"ƒêi·ªán Tho·∫°i Xanh"</b> ra ƒë·ªùi nh·∫±m thu gom, s·ª≠a ch·ªØa v√† t√°i ch·∫ø ƒëi·ªán tho·∫°i c≈©,
                        g√≥p ph·∫ßn b·∫£o v·ªá m√¥i tr∆∞·ªùng v√† t·ªëi ∆∞u h√≥a t√†i nguy√™n.
                        <br />Thay v√¨ v·ª©t b·ªè ƒëi·ªán tho·∫°i h·ªèng, b·∫°n c√≥ th·ªÉ g·ª≠i ƒë·∫øn ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t√°i ch·∫ø an to√†n,
                        t√¢n trang ho·∫∑c t·∫≠n d·ª•ng linh ki·ªán m·ªôt c√°ch hi·ªáu qu·∫£.
                    </Paragraph>
                </div>
                <div className='recycle-image2_2'>
                    <img src={vntaiche} alt="T√°i ch·∫ø ƒëi·ªán tho·∫°i" className="recycle-image2" />
                </div>
            </div>
            <Title level={3}> T·∫°i sao n√™n tham gia <b style={{ color: 'Green' }}>"ƒêi·ªán Tho·∫°i Xanh"</b> ?</Title>
            <div className="dashed-border-box">
                <List
                    bordered
                    dataSource={[
                        'B·∫£o v·ªá m√¥i tr∆∞·ªùng ‚Äì Gi·∫£m thi·ªÉu r√°c th·∫£i ƒëi·ªán t·ª≠, h·∫°n ch·∫ø √¥ nhi·ªÖm.',
                        'T·∫≠n d·ª•ng t√†i nguy√™n ‚Äì Linh ki·ªán c≈© ƒë∆∞·ª£c t√°i s·ª≠ d·ª•ng thay v√¨ khai th√°c nguy√™n li·ªáu m·ªõi.',
                        'Ti·∫øt ki·ªám & ti·ªán l·ª£i ‚Äì H·ªó tr·ª£ thu gom mi·ªÖn ph√≠, quy tr√¨nh ƒë∆°n gi·∫£n.',
                        '∆Øu ƒë√£i h·∫•p d·∫´n ‚Äì Gi·∫£m gi√° khi mua ƒëi·ªán tho·∫°i m·ªõi, t√≠ch ƒëi·ªÉm ƒë·ªïi qu√†.',
                    ]}
                    renderItem={(item) => <List.Item>{item}</List.Item>}
                />
            </div>
            <Divider />

            <Title level={3}>1Ô∏è‚É£ Gi·ªõi thi·ªáu v·ªÅ t√°i ch·∫ø ƒëi·ªán tho·∫°i</Title>
            <Collapse>
                <Panel header="T·∫°i sao n√™n t√°i ch·∫ø?" key="1">
                    <Paragraph style={{ fontSize: '18px' }} >Gi·∫£m √¥ nhi·ªÖm m√¥i tr∆∞·ªùng, h·∫°n ch·∫ø r√°c th·∫£i ƒëi·ªán t·ª≠.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }} >T·∫≠n d·ª•ng t√†i nguy√™n t·ª´ thi·∫øt b·ªã c≈©, gi·∫£m khai th√°c nguy√™n li·ªáu m·ªõi.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }} >ƒê√≥ng g√≥p v√†o n·ªÅn kinh t·∫ø tu·∫ßn ho√†n.</Paragraph>
                </Panel>
                <Panel header="L·ª£i √≠ch m√¥i tr∆∞·ªùng & kinh t·∫ø" key="2">
                    <Paragraph style={{ fontSize: '18px' }} >Gi·∫£m kh√≠ th·∫£i ƒë·ªôc h·∫°i t·ª´ r√°c ƒëi·ªán t·ª≠.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }} >Ti·∫øt ki·ªám chi ph√≠ s·∫£n xu·∫•t nh·ªù t√°i s·ª≠ d·ª•ng linh ki·ªán.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }} >Khuy·∫øn kh√≠ch kh√°ch h√†ng tham gia b·∫£o v·ªá m√¥i tr∆∞·ªùng.</Paragraph>
                </Panel>
            </Collapse>

            <Divider />

            <Title level={3}>2Ô∏è‚É£ Quy tr√¨nh x·ª≠ l√Ω r√°c ƒëi·ªán t·ª≠ t·∫°i c·ª≠a h√†ng</Title>
            <Steps current={currentStep}>
                {steps.map((item) => (
                    <Step key={item.title} title={item.title} />
                ))}

            </Steps>

            <div style={{ marginTop: '20px' }}>
                <div className="step-content">
                    <Card>{steps[currentStep].content}</Card>
                    <div className="step-buttons-container"> {/* Th√™m div b·ªçc n√∫t v√† class */}
                        <div style={{ marginTop: '20px', textAlign: 'center' }}>
                            {currentStep > 0 && (
                                <Button style={{ marginRight: '10px' }} onClick={prevStep}>
                                    Quay l·∫°i
                                </Button>
                            )}
                            {currentStep < steps.length - 1 && (
                                <Button type="primary" onClick={nextStep} style={{ backgroundColor: '#8CC63E' }}>
                                    Ti·∫øp theo
                                </Button>
                            )}
                        </div>
                    </div>

                </div>
            </div>

            <Divider />
            <Title level={3}>3Ô∏è‚É£ C√°ch thu gom ƒëi·ªán tho·∫°i c≈©/h·ªèng</Title>
            <div className='thugom'>

                <div className='thugomLeft' >
                    <div>ƒêƒÉng k√Ω request t√°i ch·∫ø:</div>
                    <p>
                        C√°ch 1: S·ª≠ d·ª•ng ch·ª©c nƒÉng "ƒêƒÉng k√Ω thu gom" t·∫°i m·ª•c 6
                        <div style={{ color: 'red', fontSize: '0.6em' }}>Ch√∫ √Ω: C√≥ th·ªÉ xem ti·∫øn tr√¨nh di·ªÖn ra sau khi ƒëƒÉng k√Ω</div>
                    </p>

                    <p>
                        C√°ch 2: ƒêi·ªÅn form Google
                        <div style={{ color: 'red', fontSize: '0.6em' }}>Ch√∫ √Ω: Kh√¥ng th·ªÉ xem ti·∫øn tr√¨nh di·ªÖn ra (d√†nh cho kh√°ch h√†ng kh√¥ng mu·ªën ƒëƒÉng nh·∫≠p)
                        </div>
                    </p>
                    <div>L·ª±a ch·ªçn 1 trong 3 ph∆∞∆°ng th·ª©c</div>
                    <p>Ph∆∞∆°ng th·ª©c 1: G·ª≠i qua b∆∞u ƒëi·ªán <DatabaseTwoTone />‚Äì Kh√°ch t·ª± g·ª≠i ƒëi·ªán tho·∫°i ƒë·∫øn c·ª≠a h√†ng.</p>
                    <p>Ph∆∞∆°ng th·ª©c 2: Thu gom t·∫≠n nh√† <HomeTwoTone /> ‚Äì C·ª≠a h√†ng ƒë·∫øn l·∫•y n·∫øu s·ªë l∆∞·ª£ng l·ªõn.</p>
                    <p>Ph∆∞∆°ng th·ª©c 3: N·ªôp t·∫°i c·ª≠a h√†ng <ShopTwoTone />‚Äì Kh√°ch ƒë·∫øn tr·ª±c ti·∫øp ƒë·ªÉ ki·ªÉm tra v√† ƒë·ªãnh gi√°.</p>
                </div>
                <div className='thugomRight'>
                    <img src={thugom} alt="T√°i ch·∫ø ƒëi·ªán tho·∫°i" className="recycle-image" />
                </div>
            </div>
            <Divider />

            <Title level={3}>4Ô∏è‚É£ Ch√≠nh s√°ch thu mua & ƒë·ªãnh gi√°</Title>
            <Collapse>
                <Panel header="Nguy√™n t·∫Øc thu mua" key="3">
                    <Paragraph style={{ fontSize: '18px' }} >ƒêi·ªán tho·∫°i c√≤n d√πng ƒë∆∞·ª£c ‚Üí Gi√° cao h∆°n, c√≥ th·ªÉ b√°n l·∫°i.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>ƒêi·ªán tho·∫°i h·ªèng nh∆∞ng c√≥ th·ªÉ s·ª≠a ‚Üí Gi√° th·∫•p h∆°n.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>ƒêi·ªán tho·∫°i h·ªèng ho√†n to√†n ‚Üí Mua gi√° r·∫ª ho·∫∑c thu mi·ªÖn ph√≠ ƒë·ªÉ l·∫•y linh ki·ªán.</Paragraph>
                </Panel>
                <Panel header="∆Øu ƒë√£i cho kh√°ch h√†ng" key="4">
                    <Paragraph style={{ fontSize: '18px' }}>H·ªó tr·ª£ gi·∫£m gi√° khi mua ƒëi·ªán tho·∫°i m·ªõi n·∫øu ƒë·ªïi ƒëi·ªán tho·∫°i c≈©.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>Ch√≠nh s√°ch ho√†n ti·ªÅn n·∫øu ƒëi·ªán tho·∫°i thu mua kh√¥ng s·ª≠a ƒë∆∞·ª£c.</Paragraph>
                </Panel>
            </Collapse>

            <Divider />



            <Divider />

            <Title level={3}>5Ô∏è‚É£  H·ª£p T√°c v·ªõi <b style={{ color: 'green' }}>"Vi·ªát Nam T√°i Ch·∫ø"</b></Title>
            <Collapse>
                <Panel header="Gi·ªõi thi·ªáu v·ªÅ ch∆∞∆°ng tr√¨nh 'Vi·ªát Nam T√°i Ch·∫ø'" key="5">
                    <div className="recycle-image2">
                        <div className='recycle-image2_1'  >
                            <Paragraph style={{ fontSize: '18px' }}>"Vi·ªát Nam T√°i Ch·∫ø" l√† ch∆∞∆°ng tr√¨nh thu gom & x·ª≠ l√Ω r√°c th·∫£i ƒëi·ªán t·ª≠ mi·ªÖn ph√≠ theo ti√™u chu·∫©n qu·ªëc t·∫ø.</Paragraph>
                            <Paragraph style={{ fontSize: '18px' }}>H·ªç h·ª£p t√°c v·ªõi nhi·ªÅu th∆∞∆°ng hi·ªáu l·ªõn nh∆∞ Apple, Dell, HP, Panasonic‚Ä¶ ƒë·ªÉ thu gom & x·ª≠ l√Ω an to√†n.</Paragraph>
                            <Paragraph style={{ fontSize: '18px' }}>ƒê·∫£m b·∫£o c√°c thi·∫øt b·ªã ƒë∆∞·ª£c t√°i ch·∫ø ƒë√∫ng c√°ch, kh√¥ng g√¢y h·∫°i cho m√¥i tr∆∞·ªùng.</Paragraph></div>
                        <div className='recycle-image2_2'>
                            <img src={vnTC} alt="T√°i ch·∫ø ƒëi·ªán tho·∫°i" className="recycle-image2" />
                        </div>
                    </div>


                </Panel>
                <Panel header="Vai tr√≤ c·ªßa c·ª≠a h√†ng trong ch∆∞∆°ng tr√¨nh n√†y" key="6">
                    <Paragraph style={{ fontSize: '18px' }}>C·ª≠a h√†ng ƒë√≥ng vai tr√≤ l√† ƒëi·ªÉm trung gian thu gom c√°c thi·∫øt b·ªã h·ªèng v√† g·ª≠i ƒë·∫øn "Vi·ªát Nam T√°i Ch·∫ø".</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>V·ªõi nh·ªØng thi·∫øt b·ªã kh√¥ng th·ªÉ s·ª≠a ch·ªØa ho·∫∑c b√°n l·∫°i, c·ª≠a h√†ng h·ªó tr·ª£ kh√°ch h√†ng g·ª≠i ƒë·∫øn ch∆∞∆°ng tr√¨nh.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>Cung c·∫•p ch·ª©ng nh·∫≠n t√°i ch·∫ø cho kh√°ch h√†ng sau khi s·∫£n ph·∫©m ƒë∆∞·ª£c x·ª≠ l√Ω.</Paragraph>
                </Panel>
                <Panel header="Quy tr√¨nh h·ª£p t√°c" key="7">
                    <Paragraph style={{ fontSize: '18px' }}>B∆∞·ªõc 1: Khi kh√°ch h√†ng g·ª≠i thi·∫øt b·ªã, c·ª≠a h√†ng ph√¢n lo·∫°i th√†nh:</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>‚úîÔ∏è C√≥ th·ªÉ s·ª≠a ch·ªØa (t√¢n trang & b√°n l·∫°i).</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>‚úîÔ∏è Kh√¥ng th·ªÉ s·ª≠a (G·ª≠i ƒë·∫øn "Vi·ªát Nam T√°i Ch·∫ø" x·ª≠ l√Ω).</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>B∆∞·ªõc 2: N·∫øu kh√°ch h√†ng mu·ªën g·ª≠i thi·∫øt b·ªã tr·ª±c ti·∫øp ƒë·∫øn "Vi·ªát Nam T√°i Ch·∫ø", c·ª≠a h√†ng cung c·∫•p th√¥ng tin & h∆∞·ªõng d·∫´n.</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>B∆∞·ªõc 3: C·ª≠a h√†ng ƒë·ªãnh k·ª≥ g·ª≠i c√°c thi·∫øt b·ªã thu gom ƒë∆∞·ª£c ƒë·∫øn "Vi·ªát Nam T√°i Ch·∫ø".</Paragraph>
                    <Paragraph style={{ fontSize: '18px' }}>B∆∞·ªõc 4: Kh√°ch h√†ng c√≥ th·ªÉ tra c·ª©u t√¨nh tr·∫°ng t√°i ch·∫ø tr√™n h·ªá th·ªëng c·ªßa c·ª≠a h√†ng ho·∫∑c website "Vi·ªát Nam T√°i Ch·∫ø".</Paragraph>
                </Panel>
            </Collapse>

            <Divider />
            <Title level={3}> 6Ô∏è‚É£ Form ƒëƒÉng k√Ω thu gom thi·∫øt b·ªã ƒëi·ªán t·ª≠</Title>

            <Button type="primary" htmlType="button" onClick={showModal} style={{ marginLeft: '40px', backgroundColor: '#8CC63E' }}>
                ƒêƒÉng k√Ω thu gom
            </Button>
            {
                requestId && ( // Hi·ªÉn th·ªã n√∫t "Xem ti·∫øn tr√¨nh" khi requestId c√≥ gi√° tr·ªã
                    <Button
                        type="primary"
                        onClick={handleViewProgress}
                        style={{ marginLeft: '10px' }}
                    >
                        Xem ti·∫øn tr√¨nh
                    </Button>
                )
            }
            <Button type="link" onClick={openGoogleForm} style={{ marginLeft: '10px' }}>
                ƒêi·ªÅn form Google
            </Button>
            <Modal
                title={
                    <Space>
                        <MobileOutlined style={{ fontSize: '20px', color: '#1890ff' }} />
                        <Title level={4} style={{ margin: 0 }}>ƒêƒÉng k√Ω thu gom ƒëi·ªán tho·∫°i</Title>
                    </Space>
                }
                visible={isModalVisible}
                onCancel={handleCancel}
                footer={null}
                width={450}
                bodyStyle={{ padding: '20px' }}
                centered
            >
                <Text type="secondary" style={{ display: 'block', marginBottom: '20px' }}>
                    Vui l√≤ng ƒëi·ªÅn th√¥ng tin ƒë·ªÉ ƒëƒÉng k√Ω thu gom thi·∫øt b·ªã ƒëi·ªán tho·∫°i c≈© c·ªßa b·∫°n.
                </Text>

                <Form layout="vertical" onFinish={handleModalSubmit}>
                    <Form.Item
                        label={<Text strong>Lo·∫°i thi·∫øt b·ªã</Text>}
                        style={{ marginBottom: '16px' }}
                    >
                        <Input
                            value={deviceType}
                            onChange={(e) => setDeviceType(e.target.value)}
                            placeholder="Nh·∫≠p lo·∫°i thi·∫øt b·ªã c·ªßa b·∫°n"
                            style={{ borderRadius: '6px' }}
                        />
                    </Form.Item>

                    <Form.Item
                        label={<Text strong>T√¨nh tr·∫°ng thi·∫øt b·ªã</Text>}
                        style={{ marginBottom: '16px' }}
                    >
                        <Input
                            value={deviceCondition}
                            onChange={(e) => setDeviceCondition(e.target.value)}
                            placeholder="M√¥ t·∫£ t√¨nh tr·∫°ng thi·∫øt b·ªã"
                            style={{ borderRadius: '6px' }}
                        />
                    </Form.Item>

                    <Form.Item
                        label={<Text strong>Ph∆∞∆°ng th·ª©c nh·∫≠n</Text>}
                        style={{ marginBottom: '24px' }}
                    >
                        <Select
                            value={pickupMethod}
                            onChange={(value) => setPickupMethod(value)}
                            style={{ width: '100%', borderRadius: '6px' }}
                        >
                            <Select.Option value="C·ª≠a h√†ng">C·ª≠a h√†ng</Select.Option>
                            <Select.Option value="T·∫°i nh√†">T·∫°i nh√†</Select.Option>
                            <Select.Option value="B∆∞u ƒëi·ªán">B∆∞u ƒëi·ªán</Select.Option>
                        </Select>
                    </Form.Item>

                    <Form.Item style={{ marginBottom: 0, textAlign: 'right' }}>
                        <Space>
                            <Button
                                onClick={handleCancel}
                                style={{ borderRadius: '6px' }}
                            >
                                H·ªßy b·ªè
                            </Button>
                            <Button
                                type="primary"
                                htmlType="submit"
                                icon={<CheckCircleOutlined />}
                                style={{
                                    borderRadius: '6px',
                                    background: '#1890ff',
                                    boxShadow: '0 2px 0 rgba(0, 0, 0, 0.045)'
                                }}
                            >
                                G·ª≠i y√™u c·∫ßu
                            </Button>

                        </Space>
                    </Form.Item>
                    <Form.Item label={<Text strong>H√¨nh ·∫£nh</Text>}>
                        <Upload
                            name="avatar"
                            listType="picture-card"
                            className="avatar-uploader"
                            showUploadList={false}
                            customRequest={customUploadRequest}
                            onChange={handleUploadChange}
                        >
                            {imageUrls ? <img
                                src={imageUrls}
                                alt="avatar"
                                style={{
                                    width: '100%',
                                    height: '100%',
                                    objectFit: 'cover'
                                }}
                            /> : uploadButton}
                        </Upload>
                    </Form.Item>
                </Form>
            </Modal>
            <Title level={3}>7Ô∏è‚É£ ∆Øu ƒê√£i Cho Kh√°ch H√†ng Khi Tham Gia T√°i Ch·∫ø</Title>
            <Paragraph style={{ fontSize: '18px' }}>Ch∆∞∆°ng tr√¨nh ∆∞u ƒë√£i ƒë·∫∑c bi·ªát:</Paragraph>
            <List
                bordered
                dataSource={[
                    'Gi·∫£m gi√° khi mua ƒëi·ªán tho·∫°i m·ªõi: N·∫øu kh√°ch h√†ng g·ª≠i ƒëi·ªán tho·∫°i c≈© ƒë·ªÉ t√°i ch·∫ø, h·ªç nh·∫≠n ƒë∆∞·ª£c voucher gi·∫£m gi√° 15% khi mua s·∫£n ph·∫©m t·∫°i c·ª≠a h√†ng.',
                    'ƒêi·ªÉm th∆∞·ªüng th√†nh vi√™n: M·ªói l·∫ßn g·ª≠i thi·∫øt b·ªã t√°i ch·∫ø, kh√°ch h√†ng ƒë∆∞·ª£c t√≠ch ƒëi·ªÉm ƒë·ªïi qu√†.',
                    'Ch·ª©ng nh·∫≠n t√°i ch·∫ø: Sau khi thi·∫øt b·ªã ƒë∆∞·ª£c t√°i ch·∫ø th√†nh c√¥ng, kh√°ch h√†ng nh·∫≠n email x√°c nh·∫≠n.',
                ]}
                renderItem={(item) => <List.Item>{item}</List.Item>}
            />
            <Paragraph style={{ fontSize: '18px' }}> M·ª•c ti√™u c·ªßa ch∆∞∆°ng tr√¨nh n√†y:</Paragraph>
            <List
                bordered
                dataSource={[
                    'Khuy·∫øn kh√≠ch ng∆∞·ªùi d√πng t√°i ch·∫ø thay v√¨ v·ª©t b·ªè.',
                    'X√¢y d·ª±ng h√¨nh ·∫£nh c·ª≠a h√†ng l√† m·ªôt doanh nghi·ªáp c√≥ tr√°ch nhi·ªám v·ªõi m√¥i tr∆∞·ªùng.',
                    'T·∫≠n d·ª•ng c√°c thi·∫øt b·ªã c√≤n gi√° tr·ªã ƒë·ªÉ s·ª≠a ch·ªØa, b√°n l·∫°i.',
                ]}
                renderItem={(item) => <List.Item>{item}</List.Item>}
            />

            <Divider />

            <Title level={3}>9Ô∏è‚É£ C√¢u h·ªèi th∆∞·ªùng g·∫∑p (FAQ)</Title>
            <Collapse>
                <Panel header="C√¢u h·ªèi ph·ªï bi·∫øn" key="8">
                    <List
                        bordered
                        dataSource={[
                            'M·∫•t bao l√¢u ƒë·ªÉ x·ª≠ l√Ω m·ªôt ƒë∆°n thu gom?',
                            'T√¥i c√≥ th·ªÉ ƒë·ªïi ƒëi·ªán tho·∫°i c≈© l·∫•y ƒëi·ªán tho·∫°i m·ªõi kh√¥ng?',
                            'N·∫øu t√¥i g·ª≠i ƒëi·ªán tho·∫°i nh∆∞ng kh√¥ng ƒë·ªìng √Ω gi√° thu mua th√¨ sao?',
                            'Nh·ªØng lo·∫°i ƒëi·ªán tho·∫°i n√†o kh√¥ng ƒë∆∞·ª£c nh·∫≠n thu gom?',
                        ]}
                        renderItem={(item) => <List.Item>{item}</List.Item>}
                    />
                </Panel>
            </Collapse>
        </div >
    );
}

export default GreenPhone;